#!/usr/bin/env bash

COMPOSE=docker-compose
APP_CONTAINER=web
CELERY_CONTAINER=celery
CELERY_BEAT_CONTAINER=celery-beat

if [ $# -gt 0 ];then
    if [ "$1" == "dc" ]; then
        shift 1
        $COMPOSE "$@"
    elif [ "$1" == "build" ]; then
        $COMPOSE build
    elif [ "$1" == "up" ]; then
        shift 1
        $COMPOSE up "$@"
    elif [ "$1" == "down" ]; then
        $COMPOSE down
    elif [ "$1" == "pip-upgrade" ]; then
        $COMPOSE exec \
			$APP_CONTAINER \
			pip install -r /app/requirements-to-freeze.txt --upgrade
    elif [ "$1" == "pip-freeze" ]; then
        $COMPOSE exec \
			$APP_CONTAINER \
			pip freeze > app/requirements.txt
    elif [ "$1" == "celery" ]; then
        shift 1
		$COMPOSE exec \
			$APP_CONTAINER \
			celery "$@"
    elif [ "$1" == "terminal" ]; then
        shift 1
        $COMPOSE exec \
        $APP_CONTAINER \
        /bin/bash
    elif [ "$1" == "python" ]; then
        shift 1
         $COMPOSE \
          exec $APP_CONTAINER \
          python
    elif [ "$1" == "shell" ]; then
        shift 1
        $COMPOSE \
        exec $APP_CONTAINER \
        flask shell
    else
		$COMPOSE exec \
			$APP_CONTAINER \
			python manage.py "$@"
    fi
fi